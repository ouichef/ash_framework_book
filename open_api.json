{
  "components": {
    "responses": {
      "errors": {
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "$ref": "#/components/schemas/errors"
            }
          }
        },
        "description": "General Error"
      }
    },
    "schemas": {
      "artist": {
        "additionalProperties": false,
        "description": "A \"Resource object\" representing a artist",
        "properties": {
          "attributes": {
            "additionalProperties": false,
            "description": "An attributes object for a artist",
            "properties": {
              "album_count": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "inserted_at": {
                "description": "Field included by default."
              },
              "latest_album_year_released": {
                "anyOf": [
                  {
                    "nullable": true,
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "name": {
                "description": "Field included by default.",
                "type": "string"
              },
              "updated_at": {
                "description": "Field included by default."
              }
            },
            "required": [
              "name",
              "inserted_at",
              "updated_at"
            ],
            "type": "object"
          },
          "id": {
            "type": "string"
          },
          "relationships": {
            "additionalProperties": false,
            "description": "A relationships object for a artist",
            "properties": {},
            "type": "object"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "id"
        ],
        "type": "object"
      },
      "artist-filter": {
        "additionalProperties": false,
        "description": "Filters the query to results matching the given filter object",
        "example": "",
        "properties": {
          "album_count": {
            "$ref": "#/components/schemas/artist-filter-album_count"
          },
          "and": {
            "items": {
              "$ref": "#/components/schemas/artist-filter"
            },
            "type": "array",
            "uniqueItems": true
          },
          "id": {
            "$ref": "#/components/schemas/artist-filter-id"
          },
          "inserted_at": {
            "$ref": "#/components/schemas/artist-filter-inserted_at"
          },
          "latest_album_year_released": {
            "$ref": "#/components/schemas/artist-filter-latest_album_year_released"
          },
          "name": {
            "$ref": "#/components/schemas/artist-filter-name"
          },
          "not": {
            "$ref": "#/components/schemas/artist-filter"
          },
          "or": {
            "items": {
              "$ref": "#/components/schemas/artist-filter"
            },
            "type": "array",
            "uniqueItems": true
          },
          "updated_at": {
            "$ref": "#/components/schemas/artist-filter-updated_at"
          }
        },
        "type": "deepObject"
      },
      "artist-filter-album_count": {
        "additionalProperties": false,
        "properties": {
          "in": {
            "items": {
              "type": "integer"
            },
            "type": "array"
          },
          "is_nil": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "artist-filter-id": {
        "additionalProperties": false,
        "properties": {
          "eq": {
            "format": "uuid",
            "type": "string"
          },
          "greater_than": {
            "format": "uuid",
            "type": "string"
          },
          "greater_than_or_equal": {
            "format": "uuid",
            "type": "string"
          },
          "in": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "is_nil": {
            "type": "boolean"
          },
          "less_than": {
            "format": "uuid",
            "type": "string"
          },
          "less_than_or_equal": {
            "format": "uuid",
            "type": "string"
          },
          "not_eq": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "artist-filter-inserted_at": {
        "additionalProperties": false,
        "properties": {
          "eq": {},
          "greater_than": {},
          "greater_than_or_equal": {},
          "in": {
            "items": {},
            "type": "array"
          },
          "is_nil": {
            "type": "boolean"
          },
          "less_than": {},
          "less_than_or_equal": {},
          "not_eq": {}
        },
        "type": "object"
      },
      "artist-filter-latest_album_year_released": {
        "additionalProperties": false,
        "properties": {
          "in": {
            "items": {
              "type": "integer"
            },
            "type": "array"
          },
          "is_nil": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "artist-filter-name": {
        "additionalProperties": false,
        "properties": {
          "eq": {
            "type": "string"
          },
          "greater_than": {
            "type": "string"
          },
          "greater_than_or_equal": {
            "type": "string"
          },
          "ilike": {
            "type": "string"
          },
          "in": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "is_nil": {
            "type": "boolean"
          },
          "less_than": {
            "type": "string"
          },
          "less_than_or_equal": {
            "type": "string"
          },
          "like": {
            "type": "string"
          },
          "not_eq": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "artist-filter-updated_at": {
        "additionalProperties": false,
        "properties": {
          "eq": {},
          "greater_than": {},
          "greater_than_or_equal": {},
          "in": {
            "items": {},
            "type": "array"
          },
          "is_nil": {
            "type": "boolean"
          },
          "less_than": {},
          "less_than_or_equal": {},
          "not_eq": {}
        },
        "type": "object"
      },
      "error": {
        "additionalProperties": false,
        "properties": {
          "code": {
            "description": "An application-specific error code, expressed as a string value.",
            "type": "string"
          },
          "detail": {
            "description": "A human-readable explanation specific to this occurrence of the problem.",
            "type": "string"
          },
          "id": {
            "description": "A unique identifier for this particular occurrence of the problem.",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/links"
          },
          "source": {
            "properties": {
              "parameter": {
                "description": "A string indicating which query parameter caused the error.",
                "type": "string"
              },
              "pointer": {
                "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                "type": "string"
              }
            },
            "type": "object"
          },
          "status": {
            "description": "The HTTP status code applicable to this problem, expressed as a string value.",
            "type": "string"
          },
          "title": {
            "description": "A short, human-readable summary of the problem. It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "errors": {
        "items": {
          "$ref": "#/components/schemas/error"
        },
        "type": "array",
        "uniqueItems": true
      },
      "link": {
        "description": "A link MUST be represented as either: a string containing the link's URL or a link object.",
        "type": "string"
      },
      "links": {
        "additionalProperties": {
          "$ref": "#/components/schemas/link"
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "api_key": {
        "description": "API Key provided in the Authorization header",
        "in": "header",
        "name": "api_key",
        "type": "apiKey"
      }
    }
  },
  "info": {
    "title": "Open API Specification",
    "version": "1.1"
  },
  "openapi": "3.0.0",
  "paths": {
    "/api/json/artists": {
      "get": {
        "callbacks": {},
        "deprecated": false,
        "description": "/artists operation on artist resource",
        "parameters": [
          {
            "description": "Filters the query to results with attributes matching the given filter object",
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/artist-filter"
            },
            "style": "deepObject"
          },
          {
            "description": "Sort order to apply to the results",
            "explode": false,
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "pattern": "^(id|-id|\\+\\+id|--id|name|-name|\\+\\+name|--name|inserted_at|-inserted_at|\\+\\+inserted_at|--inserted_at|updated_at|-updated_at|\\+\\+updated_at|--updated_at|album_count|-album_count|\\+\\+album_count|--album_count|latest_album_year_released|-latest_album_year_released|\\+\\+latest_album_year_released|--latest_album_year_released)(,(id|-id|\\+\\+id|--id|name|-name|\\+\\+name|--name|inserted_at|-inserted_at|\\+\\+inserted_at|--inserted_at|updated_at|-updated_at|\\+\\+updated_at|--updated_at|album_count|-album_count|\\+\\+album_count|--album_count|latest_album_year_released|-latest_album_year_released|\\+\\+latest_album_year_released|--latest_album_year_released))*$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Paginates the response with the limit and offset or keyset pagination.",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "example": {
                "limit": 12,
                "offset": 0
              },
              "properties": {
                "count": {
                  "default": false,
                  "type": "boolean"
                },
                "limit": {
                  "minimum": 1,
                  "type": "integer"
                },
                "offset": {
                  "minimum": 0,
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "style": "deepObject"
          },
          {
            "description": "Relationship paths to include in the response",
            "explode": false,
            "in": "query",
            "name": "include",
            "required": false,
            "schema": {
              "pattern": "^()(,())*$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Limits the response fields to only those listed for each type",
            "in": "query",
            "name": "fields",
            "required": false,
            "schema": {
              "additionalProperties": true,
              "example": {
                "artist": "id,name,inserted_at,updated_at"
              },
              "properties": {
                "artist": {
                  "description": "Comma separated field names for artist",
                  "example": "id,name,inserted_at,updated_at",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "style": "deepObject"
          },
          {
            "description": "query",
            "in": "query",
            "name": "query",
            "required": false,
            "schema": {},
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "description": "An array of resource objects representing a artist",
                      "items": {
                        "$ref": "#/components/schemas/artist"
                      },
                      "type": "array",
                      "uniqueItems": true
                    },
                    "included": {
                      "items": {
                        "oneOf": []
                      },
                      "type": "array",
                      "uniqueItems": true
                    },
                    "meta": {
                      "additionalProperties": true,
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/errors"
          }
        },
        "tags": [
          "artist"
        ]
      },
      "post": {
        "callbacks": {},
        "deprecated": false,
        "description": "/artists operation on artist resource",
        "parameters": [
          {
            "description": "Relationship paths to include in the response",
            "explode": false,
            "in": "query",
            "name": "include",
            "required": false,
            "schema": {
              "pattern": "^()(,())*$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Limits the response fields to only those listed for each type",
            "in": "query",
            "name": "fields",
            "required": false,
            "schema": {
              "additionalProperties": true,
              "example": {
                "artist": "id,name,inserted_at,updated_at"
              },
              "properties": {
                "artist": {
                  "description": "Comma separated field names for artist",
                  "example": "id,name,inserted_at,updated_at",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "style": "deepObject"
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "additionalProperties": false,
                    "properties": {
                      "attributes": {
                        "additionalProperties": false,
                        "properties": {
                          "biography": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name"
                        ],
                        "type": "object"
                      },
                      "relationships": {
                        "additionalProperties": false,
                        "properties": {},
                        "type": "object"
                      },
                      "type": {
                        "enum": [
                          "artist"
                        ]
                      }
                    },
                    "type": "object"
                  }
                },
                "required": [
                  "data"
                ],
                "type": "object"
              }
            }
          },
          "description": "Request body for the /artists operation on artist resource",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/artist"
                    },
                    "included": {
                      "items": {
                        "oneOf": []
                      },
                      "type": "array",
                      "uniqueItems": true
                    },
                    "meta": {
                      "additionalProperties": true,
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/errors"
          }
        },
        "tags": [
          "artist"
        ]
      }
    },
    "/api/json/artists/{id}": {
      "delete": {
        "callbacks": {},
        "deprecated": false,
        "description": "/artists/:id operation on artist resource",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Relationship paths to include in the response",
            "explode": false,
            "in": "query",
            "name": "include",
            "required": false,
            "schema": {
              "pattern": "^()(,())*$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Limits the response fields to only those listed for each type",
            "in": "query",
            "name": "fields",
            "required": false,
            "schema": {
              "additionalProperties": true,
              "example": {
                "artist": "id,name,inserted_at,updated_at"
              },
              "properties": {
                "artist": {
                  "description": "Comma separated field names for artist",
                  "example": "id,name,inserted_at,updated_at",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "style": "deepObject"
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted successfully"
          },
          "default": {
            "$ref": "#/components/responses/errors"
          }
        },
        "tags": [
          "artist"
        ]
      },
      "get": {
        "callbacks": {},
        "deprecated": false,
        "description": "/artists/:id operation on artist resource",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Relationship paths to include in the response",
            "explode": false,
            "in": "query",
            "name": "include",
            "required": false,
            "schema": {
              "pattern": "^()(,())*$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Limits the response fields to only those listed for each type",
            "in": "query",
            "name": "fields",
            "required": false,
            "schema": {
              "additionalProperties": true,
              "example": {
                "artist": "id,name,inserted_at,updated_at"
              },
              "properties": {
                "artist": {
                  "description": "Comma separated field names for artist",
                  "example": "id,name,inserted_at,updated_at",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "style": "deepObject"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/artist"
                    },
                    "included": {
                      "items": {
                        "oneOf": []
                      },
                      "type": "array",
                      "uniqueItems": true
                    },
                    "meta": {
                      "additionalProperties": true,
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/errors"
          }
        },
        "tags": [
          "artist"
        ]
      },
      "patch": {
        "callbacks": {},
        "deprecated": false,
        "description": "/artists/:id operation on artist resource",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Relationship paths to include in the response",
            "explode": false,
            "in": "query",
            "name": "include",
            "required": false,
            "schema": {
              "pattern": "^()(,())*$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Limits the response fields to only those listed for each type",
            "in": "query",
            "name": "fields",
            "required": false,
            "schema": {
              "additionalProperties": true,
              "example": {
                "artist": "id,name,inserted_at,updated_at"
              },
              "properties": {
                "artist": {
                  "description": "Comma separated field names for artist",
                  "example": "id,name,inserted_at,updated_at",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "style": "deepObject"
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "additionalProperties": false,
                    "properties": {
                      "attributes": {
                        "additionalProperties": false,
                        "properties": {
                          "biography": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "name": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "null"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      },
                      "id": {
                        "type": "string"
                      },
                      "relationships": {
                        "additionalProperties": false,
                        "properties": {},
                        "type": "object"
                      },
                      "type": {
                        "enum": [
                          "artist"
                        ]
                      }
                    },
                    "required": [
                      "id"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "data"
                ],
                "type": "object"
              }
            }
          },
          "description": "Request body for the /artists/:id operation on artist resource",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/artist"
                    },
                    "included": {
                      "items": {
                        "oneOf": []
                      },
                      "type": "array",
                      "uniqueItems": true
                    },
                    "meta": {
                      "additionalProperties": true,
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/errors"
          }
        },
        "tags": [
          "artist"
        ]
      }
    }
  },
  "security": [
    {
      "api_key": []
    }
  ],
  "servers": [
    {
      "url": "http://localhost:4000",
      "variables": {}
    }
  ],
  "tags": []
}